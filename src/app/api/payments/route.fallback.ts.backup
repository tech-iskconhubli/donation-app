import { NextRequest, NextResponse } from 'next/server';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { paymentId, amount, campaignId } = body;\n    \n    console.log('Payment received (without capture):', {\n      ...body,\n      timestamp: new Date().toISOString(),\n      campaignId: campaignId || 'default',\n      status: 'authorized' // Will remain authorized without server-side capture\n    });\n    \n    // Note: Without Razorpay server SDK, payment will remain in 'authorized' status\n    // To fix this, either:\n    // 1. Install razorpay package: npm install razorpay\n    // 2. Enable auto-capture in Razorpay Dashboard\n    \n    return NextResponse.json({ \n      success: true, \n      message: 'Payment received (manual capture required)',\n      paymentId: paymentId,\n      status: 'authorized',\n      campaignId: campaignId || 'default',\n      note: 'Enable auto-capture in Razorpay Dashboard or install razorpay package for automatic capture'\n    });\n    \n  } catch (error) {\n    console.error('Payment processing error:', error);\n    return NextResponse.json(\n      { success: false, message: 'Payment processing failed' }, \n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const campaignId = searchParams.get('campaignId');\n    \n    return NextResponse.json({\n      success: true,\n      campaignId: campaignId || 'all',\n      message: 'Payment data retrieved successfully',\n      data: {\n        totalDonations: 0,\n        donationCount: 0,\n        lastDonation: null\n      }\n    });\n    \n  } catch (error) {\n    console.error('Error retrieving payment data:', error);\n    return NextResponse.json(\n      { success: false, message: 'Failed to retrieve payment data' },\n      { status: 500 }\n    );\n  }\n}
